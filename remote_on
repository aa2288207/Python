#! /usr/bin/python

import argparse
import socket
import errno
from time import time as now

DEFAULT_TIMEOUT = 120
DEFAULT_SERVER_HOST = 'localhost'
DEFAULT_SERVER_PORT = 80

class NetServiceCheck(object):
	""" Wait for a network service to come online """
	def __init__(self, host, port, timeout=DEFAULT_TIMEOUT):
		self.host = host
		self.port = port
		self.timeout = timeout
		self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

	def end_wait(self):
		self.sock.close()

	def check(self):
		""" Check the service """
		if self.timeout:
			end_time = now() + self.timeout

		while True:
			try:
				if self.timeout:
					next_timeout = end_time - now()
					if next_timeout < 0:
						return False
					else:
						#print "setting socket next timeout %ss" %round(next_timeout)
						self.sock.settimeout(next_timeout)

				self.sock.connect((self.host, self.port))
			# handle exceptions
			except socket.timeout, err:
				if self.timeout:
					return False
			except socket.error, err:
				#print "Exception: %s" %err
				pass
			else: #if all goes well
				self.end_wait()
				return True

if __name__ == '__main__':
	host, port, timeout =  
	service_checker = NetServiceCheck(host, port, timeout)
	print "Checking for network service %s:%s ...." %(host, port)
	if service_checker.check():
		print "Service is open"
